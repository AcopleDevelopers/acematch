type User {
  _id: ID!
  # The first user email
  email: String!
  # The name of the User
  name: String
  # User profile
  profile: UserProfile
  # List of emails that the user has
  emails: [UserEmail]
  # The name of the roles the user has
  roles: [ID]
  # QVO Customer Id (client Id)
  customerId: ID
  # QVO subscription Id
  subscriptionId: ID
  # QVO inscription card codes
  userCards: [String]
  # Level of player skills
  expertiseLevel: String
  # Number of matches played
  playedGames: Int
  # Number of lost matches
  lostMatches: Int
  # Number of won matches
  wonMatches: Int
  # Number of matches to play and its due date
  matchesToPlay: [MatchToPlay]
  # Date when the user was created
  createdAt: Date
  # Age of the user
  age: Int
  # QVO subscription (Plan)
  subscription: Subscription
  # Card inscription in QVO
  creditCard: QvoCardInscription
  # Only for admins. If the user is enabled like admin
  enabled: Boolean
}

type UserProfile {
  firstName: String
  lastName: String
  birthdate: Date
  genre: Genre
  weight: Int
  height: Int
  ranking: String
  category: Category
  phone: String
  picture: File
}

type MatchToPlay {
  amount: Int
  dueDate: Date
}

input CreateUserProfileInput {
  firstName: String
  lastName: String
  birthdate: Date
  genre: Genre
  weight: Int
  height: Int
  category: Category
  acceptTerms: Boolean
  adminRequest: Boolean
  superAdmin: ID
}

input UserProfileInput {
  birthdate: Date
  genre: Genre
  weight: Int
  height: Int
  picture: FileInput
}

input UpdateUserProfile {
  firstName: String
  lastName: String
  birthdate: Date
  genre: Genre
  weight: Int
  height: Int
  ranking: String
  category: Category
  phone: String
  picture: FileInput
}

input AdminInput {
  firstName: String!
  lastName: String!
  birthdate: Date!
  genre: Genre
  email: String
  plainPassword: String
  plainPassword2: String
  roles: String
  enabled: Boolean
}

input AdminUpdateInput {
  firstName: String!
  lastName: String!
  birthdate: Date!
  genre: Genre
  email: String
  roles: String
  enabled: Boolean
}

type UserEmail {
  address: String!
  verified: Boolean!
}

type Subscription {
  id: String
  status: String
  debt: String
  start: Date
  end: Date
  customer: Customer
  plan: Plan
}

type Customer {
  id: String
  name: String
  email: String
}

type Plan {
  id: String
  name: String
  price: String
  currency: String
  interval: String
  interval_count: Int
}

type QvoCard {
  id: ID
  last_4_digits: String
  card_type: String
  payment_type: String
  created_at: Date
}

type QvoCardInscription {
  uid: ID
  status: String
  card: QvoCard
  created_at: Date
  updated_at: Date
}

enum Category {
  A
  B
  C
  D
}

enum Genre {
  MALE
  FEMALE
  OTHER
}
